# Secrets defined here are available for reference under registry/password, env/secret, builder/secrets,
# and accessories/*/env/secret in config/deploy.yml. All secrets should be pulled from either
# password manager, ENV, or a file. DO NOT ENTER RAW CREDENTIALS HERE! This file needs to be safe for git.

# Option 1: Read secrets from the environment
KAMAL_REGISTRY_PASSWORD=$KAMAL_REGISTRY_PASSWORD
KAMAL_REGISTRY_USERNAME=$KAMAL_REGISTRY_USERNAME
KAMAL_REGISTRY_LOGIN_SERVER=$KAMAL_REGISTRY_LOGIN_SERVER

# Kamal config
KAMAL_APP_NAME_UI=$KAMAL_APP_NAME_UI
KAMAL_APP_DOMAIN=$KAMAL_APP_DOMAIN
KAMAL_SERVER_IP=$KAMAL_SERVER_IP

# ui secrets
DATABASE_URL=$DATABASE_URL
GH_APP_ID=$GH_APP_ID
GH_APP_PRIVATE_KEY=$GH_APP_PRIVATE_KEY
GH_OAUTH_APP_ID=$GH_OAUTH_APP_ID
GH_OAUTH_CLIENT_ID=$GH_OAUTH_CLIENT_ID
GH_OAUTH_CLIENT_SECRET=$GH_OAUTH_CLIENT_SECRET
ZENODO_API_ENDPOINT=$ZENODO_API_ENDPOINT
ZENODO_ENDPOINT=$ZENODO_ENDPOINT
ZENODO_CLIENT_ID=$ZENODO_CLIENT_ID
ZENODO_CLIENT_SECRET=$ZENODO_CLIENT_SECRET
ZENODO_REDIRECT_URI=$ZENODO_REDIRECT_URI
UI_LOGWATCH_URL=$UI_LOGWATCH_URL

# Option 2: Read secrets via a command
# RAILS_MASTER_KEY=$(cat config/master.key)

# Option 3: Read secrets via kamal secrets helpers
# These will handle logging in and fetching the secrets in as few calls as possible
# There are adapters for 1Password, LastPass + Bitwarden
#
# SECRETS=$(kamal secrets fetch --adapter 1password --account my-account --from MyVault/MyItem KAMAL_REGISTRY_PASSWORD RAILS_MASTER_KEY)
# KAMAL_REGISTRY_PASSWORD=$(kamal secrets extract KAMAL_REGISTRY_PASSWORD $SECRETS)
# RAILS_MASTER_KEY=$(kamal secrets extract RAILS_MASTER_KEY $SECRETS)
